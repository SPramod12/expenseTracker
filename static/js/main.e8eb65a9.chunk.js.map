{"version":3,"sources":["components/Nav/Nav.js","components/AddExpenseBar/AddExpenseBar.js","components/TodayExpense/TodayExpense.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","AddExpenseBar","confirmedItems","useState","item","setItem","amount","setAmount","React","category","setcategory","enteredValues","event","value","target","type","Grid","container","spacing","xl","md","xs","TextField","size","id","label","variant","onChange","InputProps","inputProps","min","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","Button","onClick","createdTime2","Date","newObj2","text","toast","error","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","TodayExpense","selectedDateExpense","direction","maxDate","clearIcon","format","alignItems","toDateString","wrap","sx","minHeight","maxHeight","overflowX","width","length","map","textAlign","marginRight","Object","keys","Section","setSelectedDateExpense","duplicateItemObj","setDuplicateItemObj","justifyContent","obj","undefined","name","success","notifyError","obj1","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8eb65a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './style.css'\r\n\r\nconst Nav = ()=>{\r\n    return (\r\n\t\t<div>\r\n        <ul className='NavUl'>\r\n\t\t\t<li className=\"header_logo\" key='logoNav'>\r\n\t\t\t\tExpense Report\r\n\t\t\t</li>\r\n\t\t\t<li className = 'liNav' key='logOut'>\r\n\t\t\t\tLog Out\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React,{useState} from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport './style.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst AddExpenseBar = ({confirmedItems})=>{\r\n    let [item, setItem] = useState('')\r\n    let [amount, setAmount] = useState('')\r\n    let [category, setcategory] = React.useState('');\r\n\r\n    const enteredValues=(event)=>{\r\n        let value = event.target.value\r\n        if (event.target.type === 'number'){\r\n            setAmount(value)\r\n        }else if(event.target.type === 'text'){\r\n            setItem(value)\r\n        }\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text);\r\n    // const notifySucess = (text)=> toast.success(text);\r\n    \r\n\r\n    const addItem = ()=>{\r\n            if(item && amount && category){\r\n                let createdTime2 = new Date()\r\n                let newObj2 = {}\r\n                newObj2['name'] = item \r\n                newObj2['amount'] = amount\r\n                newObj2[\"category\"] = category\r\n                newObj2[\"createdTime2\"] = createdTime2\r\n                confirmedItems({...newObj2})\r\n                setItem('')\r\n                setAmount('')\r\n                setcategory('')\r\n            }else{\r\n                notifyError('Enter Item, Amount and Category')\r\n            }\r\n    }\r\n\r\n\r\n    const handleChangeCategory = (event)=>{\r\n        setcategory(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='exBarContainer'>\r\n            {/* <div className='ExpenseBar'> */}\r\n            <Grid container spacing={1}>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <TextField size='small' id=\"outlined-basic\" label=\"Enter Item\" variant=\"outlined\" onChange={enteredValues} value={item}/>\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <TextField size='small' id=\"outlined-basic\" label=\"Amount\" variant=\"outlined\" type='number' InputProps={{ inputProps: { min: 1 } }} onChange={enteredValues}value={amount}/>\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <FormControl size='small' fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        label=\"category\"\r\n                        onChange={handleChangeCategory}\r\n                    >\r\n                        <MenuItem value={\"Food\"}>Food</MenuItem>\r\n                        <MenuItem value={\"Transport\"}>Transport</MenuItem>\r\n                        <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\r\n                        <MenuItem value={\"Utility\"}>Utility</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                </Grid>\r\n                <Grid item xl={2} md={3} xs={6}>\r\n                <Button onClick={addItem}>Add</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExpenseBar;","import React from \"react\";\r\nimport './style.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Grid from '@mui/material/Grid';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst TodayExpense = ({selectedDateExpense = {}})=>{\r\n    const [value, onChange] = React.useState(new Date());\r\n    \r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n            {`Add to date: `}\r\n            <DatePicker\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    maxDate = {new Date()}\r\n                    clearIcon = {null}\r\n                    format = 'dd-MM-y'\r\n                />\r\n            </Grid>\r\n            <div className = 'box1'>\r\n            <Grid container alignItems=\"center\" >\r\n                <Grid item xl ={6} md={6} xs={12} className='padding0'>\r\n                    <Grid className = 'marginB5'><span className = 'expenseDate'>{ value && (value.toDateString())} Expense</span></Grid>\r\n                </Grid>\r\n                <Grid item xl ={4} md={4} xs={8}>\r\n                <FormControl className = 'marginB5' fullWidth size=\"small\">\r\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={''}\r\n                            label=\"category\"\r\n                            onChange={()=>{}}\r\n                        >\r\n                            <MenuItem value={\"Food\"}>Food</MenuItem>\r\n                            <MenuItem value={\"Transport\"}>Transport</MenuItem>\r\n                            <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\r\n                            <MenuItem value={\"Utility\"}>Utility</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xl ={4} md={4} xs={4}>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid container direction = 'column' spacing = {2} wrap = 'wrap' sx = {{minHeight:'25vh', maxHeight:'35vh', overflowX:'auto', width:'100%'}}>\r\n                    {\r\n                        selectedDateExpense && selectedDateExpense.length>0 && \r\n                        selectedDateExpense.map(item=>{\r\n                        return <Grid item >{`${item[\"name\"]} ${item[\"category\"]} ${item[\"amount\"]}₹`}<button>Delete</button> </Grid>\r\n                    })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sx={{textAlign:'right', marginRight:'10px'}}>\r\n                {\r\n                     selectedDateExpense && Object.keys(selectedDateExpense).length>0 && (`Total Cost ${'jea'}`)\r\n\r\n                }\r\n            </Grid>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default TodayExpense;","import React, {useState} from \"react\";\r\nimport AddExpenseBar from \"../AddExpenseBar/AddExpenseBar\";\r\nimport './style.css'\r\nimport ColumnChart from \"../ColumnChart/ColumnChart\";\r\nimport TodayExpense from \"../TodayExpense/TodayExpense\"\r\nimport Grid from '@mui/material/Grid';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Section = ()=>{\r\n\r\n    const [selectedDateExpense, setSelectedDateExpense] = useState([])\r\n    const [duplicateItemObj, setDuplicateItemObj] = useState({})\r\n\r\n    const notifyError = (text) => toast.error(text);\r\n    const notifySucess = (text)=> toast.success(text);\r\n\r\n    const confirmedItems = (obj)=>{\r\n        if (duplicateItemObj[obj.name] === undefined){\r\n            setSelectedDateExpense([...selectedDateExpense, obj])\r\n            notifySucess('Success')\r\n        }else{\r\n            notifyError('Item already added')\r\n        }\r\n        let obj1 = {}\r\n        obj1[obj.name] = 1\r\n        setDuplicateItemObj({...duplicateItemObj, ...obj1})\r\n    }\r\n\r\n    return (\r\n            <Grid container justifyContent='center'>\r\n                <Grid className='height100'>\r\n                    <AddExpenseBar confirmedItems={confirmedItems}/>\r\n                    <TodayExpense selectedDateExpense={selectedDateExpense}/>\r\n                </Grid>\r\n                    {/* <ColumnChart/> */}\r\n            </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default Section;","// import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav/Nav'\nimport Section from './components/Section/Section';\n\nfunction App() {\n  return (\n    <div className='marginLR10'>\n      <Nav/>\n      <Section/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}