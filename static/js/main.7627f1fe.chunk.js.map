{"version":3,"sources":["components/Nav/Nav.js","components/AddExpenseBar/AddExpenseBar.js","components/DailyExpense/DailyExpense.js","components/IncomeExpenseBox/IncomeExpenseBox.js","components/MonthlyExpense/MonthlyExpense.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","Button","size","color","AddExpenseBar","confirmedItems","useState","item","setItem","amount","setAmount","React","category","setcategory","enteredValues","event","value","target","type","Grid","container","spacing","xl","md","xs","TextField","focused","id","label","variant","onChange","InputProps","inputProps","min","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","onClick","createdTime2","Date","newObj2","parseInt","text","toast","error","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","DailyExpense","itemsOfSelectedDate","filter","setFilter","filteredList","includes","total","map","direction","maxDate","clearIcon","format","alignItems","getDate","toDateString","wrap","sx","height","overflowX","width","marginTop","length","index","borderRadius","textAlign","marginRight","reduce","i","j","IncomeExpenseBox","title","itemsList","fontWeight","fontSize","borderBottom","MonthlyExpense","Section","setItemsOfSelectedDate","duplicateItemObj","setDuplicateItemObj","marginBottom","justifyContent","obj","undefined","name","success","notifyError","obj1","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7627f1fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './style.css'\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Nav = ()=>{\r\n    return (\r\n\t\t<div>\r\n\t\t\t<ul className='NavUl'>\r\n\t\t\t\t<li className=\"header_logo\" key='logoNav'>\r\n\t\t\t\t\tExpense Report\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className = 'liNav' key='logOut'>\r\n\t\t\t\t<Button size = 'medium' color='error'>Log Out</Button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React,{useState} from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport './style.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Grid from '@mui/material/Grid';\r\n// import 'math'\r\n\r\n\r\nconst AddExpenseBar = ({confirmedItems})=>{\r\n    let [item, setItem] = useState('')\r\n    let [amount, setAmount] = useState('')\r\n    let [category, setcategory] = React.useState('');\r\n\r\n    const enteredValues=(event)=>{\r\n        let value = event.target.value\r\n        if (event.target.type === 'number'){\r\n            setAmount(value)\r\n        }else if(event.target.type === 'text'){\r\n            setItem(value)\r\n        }\r\n    }\r\n\r\n    const notifyError = (text) => toast.error(text);\r\n    // const notifySucess = (text)=> toast.success(text);\r\n    \r\n\r\n    const addItem = ()=>{\r\n            if(item && amount && category){\r\n                let createdTime2 = new Date()\r\n                let newObj2 = {}\r\n                newObj2['name'] = item \r\n                newObj2['amount'] = (parseInt(amount))\r\n                newObj2[\"category\"] = category\r\n                newObj2[\"createdTime2\"] = createdTime2\r\n                confirmedItems({...newObj2})\r\n                setItem('')\r\n                setAmount('')\r\n                setcategory('')\r\n            }else{\r\n                notifyError('Enter Item, Amount and Category')\r\n            }\r\n    }\r\n\r\n\r\n    const handleChangeCategory = (event)=>{\r\n        setcategory(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Grid container className='exBarContainer'>\r\n            {/* <div className='ExpenseBar'> */}\r\n            <Grid container spacing={1}>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <TextField focused size='small' id=\"outlined-basic\" label=\"Enter Item\" variant=\"outlined\" onChange={enteredValues} value={item}/>\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <TextField focused color='error' size='small' id=\"outlined-basic\" label=\"Amount\" variant=\"outlined\" type='number' InputProps={{ inputProps: { min: 1 } }} onChange={enteredValues}value={amount}/>\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                <FormControl focused size='small' fullWidth color='secondary'> \r\n                    <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={category}\r\n                        label=\"category\"\r\n                        onChange={handleChangeCategory}\r\n                    >\r\n                        <MenuItem value={\"Food\"}>Food</MenuItem>\r\n                        <MenuItem value={\"Transport\"}>Transport</MenuItem>\r\n                        <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\r\n                        <MenuItem value={\"Utility\"}>Utility</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                </Grid>\r\n                <Grid item xl={2} md={3} xs={6}>\r\n                <Button onClick={addItem}>Add</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <ToastContainer\r\n            position=\"bottom-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n             />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddExpenseBar;","import React from \"react\";\r\nimport './style.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Grid from '@mui/material/Grid';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '@mui/material/Button';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nconst DailyExpense = ({itemsOfSelectedDate})=>{\r\n\r\n    const [value, onChange] = React.useState(new Date());\r\n    const [filter, setFilter] = React.useState('')\r\n\r\n    const filteredList = itemsOfSelectedDate.filter(item=>item.category.includes(filter))\r\n    const total = filteredList.map(item=>item.amount)\r\n    \r\n    const changeFilterValue = (event)=>{\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const clearFilter = ()=>{\r\n        setFilter('')\r\n    }\r\n    \r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n            {`Add to date: `}\r\n            <DatePicker\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    maxDate = {new Date()}\r\n                    clearIcon = {null}\r\n                    format = 'dd-MM-y'\r\n                />\r\n            </Grid>\r\n            <div className = 'box1'>\r\n            <Grid container alignItems=\"center\"  className='borderBottom1'>\r\n                <Grid item xl ={6} md={6} xs={12} className='padding0'>\r\n                    <Grid className = 'marginB5'><span className = 'expenseDate'>{ value && (value.getDate() === new Date().getDate()? 'Todays':value.toDateString())} Expense</span></Grid>\r\n                </Grid>\r\n                <Grid item xl ={3} md={3} xs={8}>\r\n                    <FormControl  fullWidth size=\"small\">\r\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={filter}\r\n                            label=\"category\"\r\n                            onChange={changeFilterValue}\r\n                        >\r\n                            <MenuItem value={\"Food\"}>Food</MenuItem>\r\n                            <MenuItem value={\"Transport\"}>Transport</MenuItem>\r\n                            <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\r\n                            <MenuItem value={\"Utility\"}>Utility</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xl ={3} md={3} xs={4}>\r\n                    <Button onClick={clearFilter}>Clear</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid container direction = 'column' wrap = 'wrap' sx = {{height:'35vh', overflowX:'auto', width:'100%', marginTop:'5px'}}>\r\n                    {\r\n                        itemsOfSelectedDate && itemsOfSelectedDate.length>0 && \r\n                        filteredList.map((item, index)=>{\r\n                        return <Grid item className='itemBox' >{`${index+1}. ${item[\"name\"]} ${item[\"amount\"]}`}<Button size='small' sx={{borderRadius:'20px'}}><ClearIcon/></Button> </Grid>\r\n                    })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sx={{textAlign:'right', marginRight:'10px'}}>\r\n                {\r\n                     itemsOfSelectedDate && itemsOfSelectedDate.length>0 && (`Total Amount: ${total.reduce((i, j )=>i+j,0)}`)\r\n                }\r\n            </Grid>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default DailyExpense;","import React from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport './style.css'\r\n\r\nconst IncomeExpenseBox =({title, itemsList})=>{\r\n    return (\r\n        <Grid container className='box2' sx={{marginTop:'10px'}}>\r\n            <Grid item xl={12} md = {12} xs={12} sx = {{fontWeight:'400', fontSize:'1.2em', borderBottom:'1px solid'}}>\r\n                {title}\r\n            </Grid>\r\n            <Grid container direction = 'column' wrap = 'wrap' sx = {{height:'25vh', overflowX:'auto', width:'100%', marginTop:'5px'}}>\r\n                {\r\n                    itemsList && itemsList.length>0 && \r\n                    itemsList.map((item, index)=>{\r\n                    return <Grid item className='itemBox' >{`${index+1}. ${item[\"name\"]} ${item[\"amount\"]}`}<Button size='small' sx={{borderRadius:'20px'}}><ClearIcon/></Button> </Grid>\r\n                })\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenseBox;\r\n","import React from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport IncomeExpenseBox from \"../IncomeExpenseBox/IncomeExpenseBox\";\r\n\r\nconst MonthlyExpense = ()=>{\r\n    return(\r\n        <Grid>\r\n            <Grid sx = {{fontWeight:'600', fontSize:'1.4em'}}>\r\n                Monthly income and expense\r\n            </Grid>\r\n            <Grid container spacing={1} sx={{marginTop:'10px'}}>\r\n            <Grid item xl={3} md={3} xs={6}>\r\n                    <FormControl focused size='small' fullWidth color='secondary'> \r\n                        <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={''}\r\n                            label=\"category\"\r\n                            onChange={()=>{}}\r\n                        >\r\n                            <MenuItem value={\"income\"}>Income</MenuItem>\r\n                            <MenuItem value={\"bill\"}>Bill</MenuItem>\r\n                            <MenuItem value={\"other\"}>Other Expenses</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                    <TextField focused size='small' id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xl={3} md={3} xs={6}>\r\n                    <TextField focused color='error' size='small' id=\"outlined-basic\" label=\"Amount\" variant=\"outlined\" type='number' InputProps={{ inputProps: { min: 1 } }}/>\r\n                </Grid>\r\n                <Grid item xl={2} md={3} xs={6}>\r\n                    <Button >Add</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid>\r\n                <IncomeExpenseBox title='Income'/>\r\n            </Grid>\r\n            <Grid>\r\n                <IncomeExpenseBox title='Bill'/>\r\n            </Grid>\r\n            <Grid>\r\n                <IncomeExpenseBox title='Others'/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MonthlyExpense;","import React, {useState} from \"react\";\r\nimport AddExpenseBar from \"../AddExpenseBar/AddExpenseBar\";\r\nimport './style.css'\r\nimport ColumnChart from \"../ColumnChart/ColumnChart\";\r\nimport DailyExpense from \"../DailyExpense/DailyExpense\"\r\nimport Grid from '@mui/material/Grid';\r\nimport { toast } from 'react-toastify';\r\nimport MonthlyExpense from '../MonthlyExpense/MonthlyExpense'\r\n\r\nconst Section = ()=>{\r\n\r\n    const [itemsOfSelectedDate, setItemsOfSelectedDate] = useState([])\r\n    const [duplicateItemObj, setDuplicateItemObj] = useState({})\r\n\r\n    const notifyError = (text) => toast.error(text);\r\n    const notifySucess = (text)=> toast.success(text);\r\n\r\n    const confirmedItems = (obj)=>{\r\n        if (duplicateItemObj[obj.name] === undefined){\r\n            setItemsOfSelectedDate([...itemsOfSelectedDate, obj])\r\n            notifySucess('Success')\r\n        }else{\r\n            notifyError('Item already added')\r\n        }\r\n        let obj1 = {}\r\n        obj1[obj.name] = 1\r\n        setDuplicateItemObj({...duplicateItemObj, ...obj1})\r\n    }\r\n\r\n    return (\r\n        <Grid sx = {{marginBottom:'10px'}}>\r\n            <Grid container justifyContent='center' sx={{marginTop:'15px'}}>\r\n                <Grid item xl={5} md={8} xs={12} className='height100'>\r\n                    <AddExpenseBar confirmedItems={confirmedItems}/>\r\n                    <DailyExpense itemsOfSelectedDate={itemsOfSelectedDate}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justifyContent='center' sx={{marginTop:'15px'}}>\r\n                <Grid item xl={5} md={8} xs={12}>\r\n                    <MonthlyExpense/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default Section;","// import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav/Nav'\nimport Section from './components/Section/Section';\n\nfunction App() {\n  return (\n    <div className='marginLR10'>\n      <Nav/>\n      <Section/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}